@use "functions.scss" as fn;

@mixin font-h1 {
  font-size: fn.font-size-var(h1);
  font-weight: 500;
}
@mixin font-h2 {
  font-size: fn.font-size-var(h2);
  font-weight: 500;
}
@mixin font-h3 {
  font-size: fn.font-size-var(h3);
  font-weight: 500;
}
@mixin font-h4 {
  font-size: fn.font-size-var(h4);
  font-weight: 500;
}
@mixin font-h5 {
  font-size: fn.font-size-var(h5);
  font-weight: 500;
}
@mixin font-h6 {
  font-size: fn.font-size-var(h6);
  font-weight: 500;
}
@mixin font-h7 {
  font-size: fn.font-size-var(small);
  font-weight: 500;
}
@mixin font-h8 {
  font-size: fn.font-size-var(caption);
  font-weight: 500;
}
@mixin font-h9 {
  font-size: fn.font-size-var(caption);
  font-weight: 500;
  text-transform: uppercase;
}
@mixin font-paragraph {
  font-size: fn.font-size-var(default);
  font-weight: normal;
}
@mixin font-paragraph-small {
  font-size: fn.font-size-var(small);
  font-weight: normal;
}
@mixin font-caption {
  font-size: fn.font-size-var(caption);
  font-weight: normal;
}
@mixin font-caption-light {
  font-size: fn.font-size-var(caption);
  font-weight: 300;
}
@mixin font-button {
  font-size: fn.font-size-var(default);
  font-weight: 500;
}
@mixin font-button-small {
  font-size: fn.font-size-var(small);
  font-weight: 500;
}
@mixin font-menu {
  font-size: fn.font-size-var(default);
  font-weight: 500;
}
@mixin font-link {
  font-size: fn.font-size-var(small);
  font-weight: 500;
  text-decoration: underline;
  cursor: pointer;
}
@mixin font-link-small {
  font-size: fn.font-size-var(smaller);
  font-weight: 500;
  text-decoration: underline;
  cursor: pointer;
}
@mixin font-input {
  font-size: fn.font-size-var(small);
  font-weight: 500;
}
@mixin font-tag {
  font-size: fn.font-size-var(caption);
  font-weight: bold;
  text-transform: uppercase;
}

@mixin ellipsed-line {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin bgIcon($icon, $size) {
  $icon-path: url("../assets/icons/#{$icon}.svg");
  -webkit-mask-image: $icon-path;
  mask-image: $icon-path;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  background: currentColor;
  @if $size {
    width: $size;
    height: $size;
  }
}

// TODO: to delete after restyling
@mixin formDialog($width: 37.5rem) {
  form {
    width: $width;
    display: grid;
    gap: fn.spacing-var(xs);
    grid-template-columns: repeat(2, calc(50% - #{fn.spacing-var(xs)} / 2));

    div {
      &:has(label) {
        display: flex;
        flex-direction: column;
      }
    }
    label {
      color: fn.color-var(grayscale, 60);

      &.required::after {
        content: "*";
        color: fn.color-var(semantic, error);
        font-weight: bold;
      }

      + p {
        margin: fn.spacing-var(xs) 0;
      }
    }

    p {
      margin-top: fn.spacing-var(xxs);
    }

    .full-row {
      grid-column: 1/3;
    }
  }

  div.file-select {
    display: grid;
    gap: fn.spacing-var(xs);

    kendo-button {
      width: fit-content;
    }
  }

  kendo-dialog-actions {
    width: calc($width + 2 * fn.spacing-var(m));

    &:has(> ul) {
      display: grid;
      grid-template-columns: minmax(0, auto) min-content;
    }

    span {
      color: fn.color-var(semantic, error);
    }
  }
}

// TODO: to delete after restyling
@mixin feature-style {
  @include display-flex(column, center, center, fn.spacing(xs));
  padding: fn.spacing(s);
  max-width: 100vw;
  height: 100%;

  .section-title {
    @include display-flex(row, center, center, fn.spacing(xs));
    width: 100%;

    h1 {
      text-align: center;
    }
  }

  kendo-grid {
    display: flex;
    height: 100%;
    width: 100%;
  }

  .main-grid {
    display: flex;
    width: 100%;
  }

  .tabstrip-content {
    display: grid;
    gap: fn.spacing(s);
  }

  .master-detail-title {
    font-weight: bold;
  }
}

@mixin active-list-item {
  position: relative;
  color: fn.color-var(primary);

  &:after {
    content: "";
    position: absolute;
    background-color: fn.color-var(primary);
    bottom: calc(-1 * #{fn.spacing-var(min)});
    height: fn.spacing-var(min);
    width: 100%;
  }
}

@mixin naked-button {
  display: inline-flex;
  border: none;
  background: none;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  padding: 0;
  margin: 0;
}

@mixin display-flex($direction: row, $justification: flex-start, $alignment: flex-start, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justification;
  align-items: $alignment;
  gap: $gap;
}

@mixin withSize($value) {
  height: fn.spacing($value);
  width: fn.spacing($value);
}

@mixin form-default-style($content-columns: 2, $footer-columns: 2) {
  form {
    display: grid;
    grid-template-columns: repeat($content-columns, minmax(0, 1fr));
    grid-gap: fn.spacing(s);
  }

  [slot="footer"] {
    display: grid;
    grid-template-columns: repeat($footer-columns, auto);
    grid-gap: fn.spacing(s);
  }
}
