@use "spacings.scss" as spacings;

$form-bg: #111111;
$form-border: rgba(255, 255, 255, 0.1);
$input-bg: rgba(30, 30, 30, 0.9);
$accent: #3c3c3c;
$accent-alt: #FFD700;
$error-color: #FF4B4B;
$text-light: #E0E0E0;
$glow-soft: rgba(255, 215, 0, 0.4);

form {
  max-width: 420px;
  margin: 100px auto;
  padding: spacings.$xl;
  border-radius: spacings.$m;
  background: $form-bg;
  border: 1px solid $form-border;
  box-shadow: 0 0 spacings.$ul rgba(255, 0, 255, 0.15);
  font-family: 'Orbitron', 'Poppins', sans-serif;
  color: $text-light;
  position: relative;
  overflow: hidden;
  animation: fadeIn 0.8s ease forwards;
  display: flex;
  flex-direction: column;
  gap: spacings.$m;

  &::before {
    content: '';
    position: absolute;
    inset: -50%;
    background: conic-gradient(from 180deg, $accent, $accent-alt, $accent, $accent-alt);
    animation: spinGlow 6s linear infinite;
    z-index: 0;
    filter: blur(80px);
  }

  .form-field-wrapper {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: spacings.$xs;
    z-index: 1;

    label {
      display: block;
      font-weight: 700;
      padding-left: spacings.$xxs;
      text-transform: uppercase;
      letter-spacing: 1px;
      color: lighten($accent-alt, 20%);
      text-shadow: 0 0 5px $accent-alt, 0 0 10px $accent-alt;
    }

    &:has(input.form-field[type='checkbox']) {
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: center;
    }

    input.form-field {
      &[type='text'],
      &[type='email'] {
        width: 100%;
        padding: spacings.$s spacings.$m;
        background: $input-bg;
        border: 1px solid rgba(255, 255, 255, 0.15);
        border-radius: spacings.$s;
        color: $text-light;
        transition: all 0.3s ease;
        box-shadow: inset 0 0 spacings.$xsp rgba(0, 0, 0, 0.6);

        &:focus {
          outline: none;
          border-color: $accent-alt;
          box-shadow: 0 0 spacings.$m $accent-alt, inset 0 0 10px rgba(0, 255, 255, 0.4);
          transform: scale(1.02);
        }
      }

      &[type='checkbox'] {
        appearance: none;
        width: 22px;
        height: 22px;
        border: 2px solid $accent-alt;
        border-radius: spacings.$xxs;
        background: rgba(10, 10, 15, 0.9);
        cursor: pointer;
        position: relative;
        transition: all 0.3s ease;
        box-shadow: 0 0 spacings.$m rgba(0, 255, 255, 0.2);

        &:hover {
          box-shadow: 0 0 20px $accent-alt;
          transform: scale(1.1);
        }

        &:checked {
          background: linear-gradient(135deg, $accent, $accent-alt);
          border-color: transparent;
          box-shadow: 0 0 25px $accent, 0 0 50px $accent-alt;
          border: 2px solid $accent-alt;
          transform: scale(1.15);

          &::after {
            content: '';
            position: absolute;
            top: 1px;
            left: 6px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
            animation: checkmarkPop 0.3s ease forwards;
            filter: drop-shadow(0 0 6px white);
          }
        }
      }
    }

    > ul {
      margin: 0;
      padding-left: spacings.$m;

      li {
        color: $error-color;
        list-style: none;
        animation: slideIn 0.4s ease;
        text-shadow: 0 0 spacings.$s $error-color;
      }
    }
  }

  button {
    width: 100%;
    padding: spacings.$s 0;
    background: linear-gradient(135deg, $accent, $accent-alt);
    border: none;
    border-radius: spacings.$l;
    color: $text-light;
    font-weight: 800;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    text-shadow: 0 0 spacings.$xs $accent-alt;
    position: relative;
    overflow: hidden;

    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
      transition: all 0.5s;
    }

    &:hover {
      transform: translateY(-2px) scale(1.03);
      box-shadow: 0 0 25px $accent, 0 0 50px $accent-alt;
    }

    &:hover::before {
      left: 100%;
    }

    &:disabled {
      background: rgba(255, 255, 255, 0.1);
      color: rgba(255, 255, 255, 0.3);
      cursor: not-allowed;
      box-shadow: none;
    }
  }
}

@keyframes spinGlow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes checkmarkPop {
  0% {
    transform: scale(0) rotate(45deg);
  }
  60% {
    transform: scale(1.3) rotate(45deg);
  }
  100% {
    transform: scale(1) rotate(45deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
